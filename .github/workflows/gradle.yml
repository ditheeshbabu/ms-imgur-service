name: CI/CD to EC2

on:
  push:
  pull_request:
    branches:
      - '**'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Check out code
        uses: actions/checkout@v2

      # Step 2: Set up JDK 23
      - name: Set up JDK 23
        uses: actions/setup-java@v2
        with:
          java-version: 23
          distribution: 'adopt'
          cache: gradle

      # Step 3: Build the project using Gradle
      - name: Build with Gradle
        run: ./gradlew build

      # Step 4: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 5: Build and push Docker image with the 'latest' tag
      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/ms-imgur-service:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/ms-imgur-service:latest

      # Step 6: Deploy to EC2
      - name: Deploy to EC2
        run: |
          echo "${{ secrets.EC2_PRIVATE_KEY }}" > ec2_key.pem
          chmod 600 ec2_key.pem
          ssh -o StrictHostKeyChecking=no -i ec2_key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            # Pull the latest Docker image
            docker pull ${{ secrets.DOCKER_USERNAME }}/ms-imgur-service:latest

            # Stop and remove the existing container
            docker stop imgur-service || true
            docker rm imgur-service || true

            # Run the new container
            docker run -d --name imgur-service -p 80:9090 ${{ secrets.DOCKER_USERNAME }}/ms-imgur-service:latest
          EOF
        shell: bash